// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  workouts  Workout[]
}

model Workout {
  id        Int               @id @default(autoincrement())
  title     String
  createdAt DateTime          @default(now())
  user      User              @relation(fields: [userId], references: [id])
  userId    Int
  exercises WorkoutExercise[]
}

model WorkoutExercise {
  id           Int                  @id @default(autoincrement())
  workout      Workout              @relation(fields: [workoutId], references: [id])
  workoutId    Int
  baseExercise BaseExercise         @relation(fields: [exerciseId], references: [id])
  exerciseId   Int
  sets         WorkoutExerciseSet[] // A workout exercise can have multiple sets
}

model WorkoutExerciseSet {
  id                Int             @id @default(autoincrement()) // Primary key for the set
  workoutExercise   WorkoutExercise @relation(fields: [workoutExerciseId], references: [id]) // Relation to the workout exercise
  workoutExerciseId Int // Foreign key to WorkoutExercise
  reps              Int // Number of reps in this set
}

model BaseExercise {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  description String?
  category    String?
  imgUrl      String?
  workouts    WorkoutExercise[]
}
